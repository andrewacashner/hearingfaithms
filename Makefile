# Andrew Cashner's book on villancicos for Brill
# Makefile, 2020/02/10
#
# Compile music examples to PDF with Lilypond
# Compile main LaTeX document, including those PDFs

# INPUT
# Main file
main_in		= main.tex

# TeX input subfiles
chapters_in	= $(wildcard chapters/*.tex)
poem_exx_in	= $(wildcard poem-examples/*.tex)
diagrams_in	= $(wildcard diagrams/*.tex)
tables_in	= $(wildcard tables/*.tex)
tex_subfiles	= $(chapters_in) $(poem_exx_in) $(diagrams_in) $(tables_in)

# Lilypond input files
ly_in_dir	= music-examples
ly_in 		= $(wildcard $(ly_in_dir)/*.ly)

# Map input files
maps_in_dir	= maps
maps_in		= $(wildcard $(maps_in_dir)/*.tex)

# Figure source files
figures_in	= $(wildcard figures/*.jpg) # TODO preferred file format?

# Library files
ly_lib		= $(wildcard ly/*.ly)
tex_lib		= $(wildcard tex/*.cls) $(wildcard tex/*.sty) \
		  $(wildcard tex/*.tex)
bib		= $(wildcard tex/*.bib)


# OUTPUT
# Destination directories
aux 		= aux
build 		= build

chapters_aux_dir = $(aux)/chapters
music_aux_dir	= $(aux)/music-examples
maps_aux_dir	= $(aux)/maps

music_out_dir	= $(build)/music-examples
figures_dir	= $(build)/figures
maps_out_dir	= $(build)/maps

dirs		= $(aux) $(chapters_aux_dir) \
		  $(music_aux_dir) $(maps_aux_dir) \
		  $(build) $(music_out_dir) \
		  $(figures_dir) $(maps_out_dir)

# Main output
main_out	= $(build)/Cashner-2020-Hearing_Faith.pdf

# Music example PDFs generated by Lilypond
music_out	= $(addprefix $(build)/,$(ly_in:%.ly=%.pdf))

# Figures in build dir
figures_out	= $(addprefix $(build)/,$(figures_in))

# Maps in build dir
maps_out	= $(addprefix $(build)/,$(maps_in:%.tex=%.pdf))

# Temporary files
main_aux	= $(addprefix $(aux)/,$(main_in:%.tex=%.pdf))

latexmkrc	= tex/latexmkrc

# Commands
# High resolution is needed to avoid bounding box errors with Lilypond files
pdfcrop = pdfcrop --hires --resolution 1000x1000

# TARGETS and RULES
.PHONY : all ly maps count view clean reset 

# MAIN LATEX DOCUMENT
all : $(main_out)

# Compile main tex file to aux dir
$(main_aux) : $(main_in) $(tex_subfiles) $(tex_lib) $(bib) \
    $(music_out) $(figures_out) $(maps_out) \
    $(latexmkrc) | $(dirs)
	latexmk -r $(latexmkrc) $<

# LaTeX compilation options set in latexmkrc:
# - use xelatex to make PDF
# - send output to aux/
# - use texindy with UTF8 to make index

# Copy and rename result to build dir
# Clean up PDF fonts and reduce file size by postprocessing with Ghostscript
$(main_out) : $(main_aux)
	gs -o $@ -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress $<


# LILYPOND MUSIC EXAMPLES
# Compile Lilypond PDFs to music_exx dir
# Crop using pdfcrop with high resolution
# - Lilypond's own cropping mechanism destroys vertical spacing
# - It can route output to a directory but only if the extension is left off and
#   only if relative includes are enabled.

ly : $(music_out)

$(music_out) : $(ly_in) $(ly_lib) | $(dirs)

$(music_out_dir)/%.pdf : $(music_aux_dir)/%.pdf
	$(pdfcrop) $< $@

$(music_aux_dir)/%.pdf : $(ly_in_dir)/%.ly 
	lilypond -I $(PWD)/ly -drelative-includes \
	    -o $(music_aux_dir)/$* $<

# FIGURES
# Just copy the figures
$(figures_out) : $(figures_in)

build/figures/%.jpg : figures/%.jpg
	cp -u $< $@


# MAPS
# Compile to cropped PDFs using pstricks
maps : $(maps_out)

$(maps_out) : $(maps_in) $(tex_lib) | $(dirs)

$(maps_out_dir)/%.pdf : $(maps_aux_dir)/%.pdf
	$(pdfcrop) $< $@

$(maps_aux_dir)/%.pdf : $(maps_aux_dir)/%.ps
	ps2pdf -dNOSAFER $< $@

$(maps_aux_dir)/%.ps : $(maps_aux_dir)/%.dvi
	dvips $< -o $@

$(maps_aux_dir)/%.dvi : $(maps_in_dir)/%.tex
	latex -output-directory=$(maps_aux_dir) $<


# DIRECTORIES
# Make needed directories first
$(dirs) :
	mkdir -p $(dirs)

# WORD COUNT
# Count words from output PDF
count : all	
	pdftotext $(main_out) - | wc -w

# VIEW
# View output (and suppress console junk messages)
view : all
	evince $(main_out) &> /dev/null &

# CLEAN
# Clean up: clean removes aux, reset removes aux and build
clean : 
	rm -rf $(aux)

reset : clean
	rm -rf $(build)


